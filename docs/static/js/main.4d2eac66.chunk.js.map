{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAOd,2BAAOO,KAAK,OAAOC,YAAY,kBAAkBC,MAAOV,EAAYW,SAhBlD,SAACR,GACvBF,EAAcE,EAAES,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DAEJ,mCACTC,EAHa,iDAGmCC,UAAUH,GAH7C,4BAEJ,oCAFI,SAIII,MAAMF,GAJV,cAIbG,EAJa,gBAKIA,EAASC,OALb,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCCPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCDHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EAEZf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAgBtC,OATAC,qBAAU,WAENxB,EAAQC,GAAUwB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACpCf,KAAMkB,EACNL,SAAS,SAGd,CAACpB,IAEGqB,EDd0BK,CAAa1B,GAAjCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,oCACI,4BAAKpB,GACHoB,GAAW,uBAAGJ,UAAU,oCAAb,aACb,yBAAKA,UAAU,aAEPH,EAAOJ,KAAI,SAAAC,GACP,OAAO,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEZhDkB,EAAe,WAAM,MAIM3C,mBAAS,CAAC,YAJhB,mBAIvB4C,EAJuB,KAIX7C,EAJW,KAY9B,OACI,oCACI,sCACA,6EACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEI6C,EAAWpB,KAAI,SAAAT,GAAQ,OAAI,kBAAC,EAAD,CAASA,SAAUA,EAAU2B,IAAK3B,S,YChB7E8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.4d2eac66.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" placeholder=\"Escribe algo...\" value={inputValue} onChange={handleInputChange}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const apiKey = 'r1CQOEj4oKyEx0DqqadLrelcXxVm9ZWu';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=2&api_key=${apiKey}`\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    \r\n    return(gifs);\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading..</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => {\r\n                        return <GifGridItem key={img.id} {...img} />\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","// rafc para crear el cascaron\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGif';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category).then(imgs => setState({\r\n            data: imgs,\r\n            loading: false\r\n        }));\r\n\r\n    }, [category]);\r\n\r\n    return state; // Data: [] y loading: true\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['Beisbol', 'Futbol', 'Baloncesto'];\r\n\r\n    const [categories, setCategories] = useState(['Beisbol']);\r\n\r\n    // const handleAdd = () => {\r\n    //     // setCategories( ['Futbol Américano', ...categories] );\r\n    //     setCategories( cats => [...cats, 'Futbol Américano'] )\r\n\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h1>GifApp</h1>\r\n            <p>Obten gifs referente a lo que sea que escribas</p>\r\n            <AddCategory setCategories={setCategories} />\r\n            <br/>\r\n            {\r\n                categories.map(category => <GifGrid category={category} key={category}/> )\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\nimport 'animate.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// src GifExpertApp"],"sourceRoot":""}